import EasCommand from '../../commandUtils/EasCommand';
import { ExpoGraphqlClient } from '../../commandUtils/context/contextUtils/createGraphqlClient';
import { ViewBranchQueryVariables } from '../../graphql/generated';
import { PublishPlatform } from '../../project/publish';
export declare const defaultPublishPlatforms: PublishPlatform[];
export declare type PublishPlatformFlag = PublishPlatform | 'all';
export declare function ensureBranchExistsAsync(graphqlClient: ExpoGraphqlClient, { appId, name: branchName }: ViewBranchQueryVariables): Promise<{
    branchId: string;
}>;
export default class UpdatePublish extends EasCommand {
    static description: string;
    static flags: {
        json: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'non-interactive': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        branch: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        message: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        republish: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        group: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
        'input-dir': import("@oclif/core/lib/interfaces").OptionFlag<string>;
        'skip-bundler': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        platform: import("@oclif/core/lib/interfaces").OptionFlag<string>;
        auto: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
        'private-key-path': import("@oclif/core/lib/interfaces").OptionFlag<string | undefined>;
    };
    static contextDefinition: {
        loggedIn: import("../../commandUtils/context/LoggedInContextField").default;
        getDynamicProjectConfigAsync: import("../../commandUtils/context/DynamicProjectConfigContextField").DynamicProjectConfigContextField;
    };
    runAsync(): Promise<void>;
}
export declare const truncatePublishUpdateMessage: (originalMessage: string) => string;
